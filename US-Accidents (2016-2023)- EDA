{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.13","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":5793796,"sourceType":"datasetVersion","datasetId":199387}],"dockerImageVersionId":30732,"isInternetEnabled":false,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"source":"<a href=\"https://www.kaggle.com/code/vinamrahnemani/us-accidents-2016-2023-eda?scriptVersionId=184665529\" target=\"_blank\"><img align=\"left\" alt=\"Kaggle\" title=\"Open in Kaggle\" src=\"https://kaggle.com/static/images/open-in-kaggle.svg\"></a>","metadata":{},"cell_type":"markdown"},{"cell_type":"markdown","source":"![image.png](attachment:eef2408a-6a77-4ae5-b908-b8bb09415cac.png)","metadata":{},"attachments":{"eef2408a-6a77-4ae5-b908-b8bb09415cac.png":{"image/png":""}}},{"cell_type":"markdown","source":"#### Dataset Overview :-\n* Source: The dataset covers US accidents from 2016 to 2023 and is available on Kaggle.\n* Attributes: The dataset probably includes various attributes such as location (latitude and longitude), time of accident, weather conditions, road conditions, severity of accidents, and potentially contributing factors like visibility and traffic congestion.\n\n#### Key uses for Accident Data Analysis :- \n\n1. *Traffic Safety Analysis*:\n   - Identifying high-risk areas and times for accidents.\n   - Understanding the impact of weather and road conditions on accident rates.\n\n2. *Predictive Modeling*:\n   - Developing machine learning models to predict accidents based on location, time, and conditions.\n   - Creating real-time warning systems to alert drivers about high-risk conditions.\n\n3. *Urban Planning and Infrastructure Development*:\n   - Guiding the design and improvement of road networks.\n   - Prioritizing areas for infrastructure investment to enhance safety.\n\n4. *Insurance and Risk Assessment*:\n   - Assisting insurance companies in assessing risk and setting premiums.\n   - Identifying trends in accident claims to improve customer service and fraud detection.\n\n5. *Emergency Response and Planning*:\n   - Optimizing the deployment of emergency services based on accident patterns.\n   - Improving response times and resource allocation for accident-prone areas.","metadata":{}},{"cell_type":"code","source":"# Importing the important python libraries\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns","metadata":{"execution":{"iopub.status.busy":"2024-06-14T03:41:47.152579Z","iopub.execute_input":"2024-06-14T03:41:47.153036Z","iopub.status.idle":"2024-06-14T03:41:49.915096Z","shell.execute_reply.started":"2024-06-14T03:41:47.153003Z","shell.execute_reply":"2024-06-14T03:41:49.913846Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"## Data Preparation and Cleaning","metadata":{}},{"cell_type":"code","source":"df = pd.read_csv('/kaggle/input/us-accidents/US_Accidents_March23.csv')","metadata":{"execution":{"iopub.status.busy":"2024-06-14T03:41:49.916929Z","iopub.execute_input":"2024-06-14T03:41:49.917408Z","iopub.status.idle":"2024-06-14T03:44:09.27988Z","shell.execute_reply.started":"2024-06-14T03:41:49.917378Z","shell.execute_reply":"2024-06-14T03:44:09.278703Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"df.columns","metadata":{"execution":{"iopub.status.busy":"2024-06-14T03:44:09.281606Z","iopub.execute_input":"2024-06-14T03:44:09.282009Z","iopub.status.idle":"2024-06-14T03:44:09.294254Z","shell.execute_reply.started":"2024-06-14T03:44:09.281975Z","shell.execute_reply":"2024-06-14T03:44:09.292896Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# Overall Information about the Data\ndf.info()","metadata":{"execution":{"iopub.status.busy":"2024-06-14T03:44:09.297238Z","iopub.execute_input":"2024-06-14T03:44:09.29767Z","iopub.status.idle":"2024-06-14T03:44:09.342505Z","shell.execute_reply.started":"2024-06-14T03:44:09.297639Z","shell.execute_reply":"2024-06-14T03:44:09.341023Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# Descriptive Statistics of all the numerical columns\ndf.describe()","metadata":{"execution":{"iopub.status.busy":"2024-06-14T03:44:09.344359Z","iopub.execute_input":"2024-06-14T03:44:09.344831Z","iopub.status.idle":"2024-06-14T03:44:14.280567Z","shell.execute_reply.started":"2024-06-14T03:44:09.344773Z","shell.execute_reply":"2024-06-14T03:44:14.279327Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# Missing entry\ndf.isna().sum()","metadata":{"execution":{"iopub.status.busy":"2024-06-14T03:44:14.282157Z","iopub.execute_input":"2024-06-14T03:44:14.282484Z","iopub.status.idle":"2024-06-14T03:44:32.556434Z","shell.execute_reply.started":"2024-06-14T03:44:14.282456Z","shell.execute_reply":"2024-06-14T03:44:32.554448Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# Percentage of missing values per column\nmissing_df = df.isna().sum().sort_values(ascending=False) / len(df)\npercentage_miss = missing_df[missing_df != 0]\npercentage_miss","metadata":{"execution":{"iopub.status.busy":"2024-06-14T03:44:32.559298Z","iopub.execute_input":"2024-06-14T03:44:32.560537Z","iopub.status.idle":"2024-06-14T03:44:49.376124Z","shell.execute_reply.started":"2024-06-14T03:44:32.56048Z","shell.execute_reply":"2024-06-14T03:44:49.374968Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# Converting Series to Dataframe\npercentage_miss = percentage_miss.to_frame()","metadata":{"execution":{"iopub.status.busy":"2024-06-14T03:44:49.377811Z","iopub.execute_input":"2024-06-14T03:44:49.378234Z","iopub.status.idle":"2024-06-14T03:44:49.384234Z","shell.execute_reply.started":"2024-06-14T03:44:49.3782Z","shell.execute_reply":"2024-06-14T03:44:49.382588Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# Heatmap Visualization\nsns.heatmap(percentage_miss,annot=True)","metadata":{"execution":{"iopub.status.busy":"2024-06-14T03:44:49.385935Z","iopub.execute_input":"2024-06-14T03:44:49.386374Z","iopub.status.idle":"2024-06-14T03:44:50.14785Z","shell.execute_reply.started":"2024-06-14T03:44:49.386336Z","shell.execute_reply":"2024-06-14T03:44:50.14632Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# We will exclude the columns that contain more than 5% of missing values, as they are not appropriate for the analysis.\ncols = [var for var in df.columns if df[var].isnull().mean() > 0.05]\ncols","metadata":{"execution":{"iopub.status.busy":"2024-06-14T03:44:50.152772Z","iopub.execute_input":"2024-06-14T03:44:50.153212Z","iopub.status.idle":"2024-06-14T03:45:06.463606Z","shell.execute_reply.started":"2024-06-14T03:44:50.153178Z","shell.execute_reply":"2024-06-14T03:45:06.462401Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# Unnecessary columns removal\ndf.drop(columns=cols,inplace=True)","metadata":{"execution":{"iopub.status.busy":"2024-06-14T03:45:06.465331Z","iopub.execute_input":"2024-06-14T03:45:06.465835Z","iopub.status.idle":"2024-06-14T03:45:10.136293Z","shell.execute_reply.started":"2024-06-14T03:45:06.465758Z","shell.execute_reply":"2024-06-14T03:45:10.134987Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# Moreover, we can remove all the useless columns that do not provide any insightful information from our dataframe\ndf.drop(['Source','End_Time','Description','Zipcode', 'Timezone', 'Airport_Code', 'Pressure(in)', \n               'Wind_Direction', 'County', 'Turning_Loop', 'Astronomical_Twilight',\n              'Nautical_Twilight', 'Civil_Twilight', 'Country','ID','Amenity','Bump','Give_Way','Junction','Crossing',\n               'Railway','No_Exit','End_Time','Traffic_Calming','Stop','Station','Roundabout','Traffic_Signal',], axis=1, inplace=True)","metadata":{"execution":{"iopub.status.busy":"2024-06-14T03:45:10.137854Z","iopub.execute_input":"2024-06-14T03:45:10.138241Z","iopub.status.idle":"2024-06-14T03:45:12.391234Z","shell.execute_reply.started":"2024-06-14T03:45:10.138209Z","shell.execute_reply":"2024-06-14T03:45:12.389884Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# Creating a copy of our Dataframe (for comparison)\nnew_df= df","metadata":{"execution":{"iopub.status.busy":"2024-06-14T03:45:12.392714Z","iopub.execute_input":"2024-06-14T03:45:12.393107Z","iopub.status.idle":"2024-06-14T03:45:12.398492Z","shell.execute_reply.started":"2024-06-14T03:45:12.393076Z","shell.execute_reply":"2024-06-14T03:45:12.397221Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# Importing the SimpleImputer Class from Scikit-Learn\nfrom sklearn.impute import SimpleImputer","metadata":{"execution":{"iopub.status.busy":"2024-06-14T03:45:12.399874Z","iopub.execute_input":"2024-06-14T03:45:12.400307Z","iopub.status.idle":"2024-06-14T03:45:12.864032Z","shell.execute_reply.started":"2024-06-14T03:45:12.400276Z","shell.execute_reply":"2024-06-14T03:45:12.862466Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# We are replacing the missing values in each categorical column with the most frequently occurring entry within that column\ncategorical_feat = ['Street', 'City', 'Weather_Timestamp', 'Weather_Condition', 'Sunrise_Sunset']\ncategorical_imputer = SimpleImputer(strategy='most_frequent')\nnew_df[categorical_feat] = categorical_imputer.fit_transform(new_df[categorical_feat])","metadata":{"execution":{"iopub.status.busy":"2024-06-14T03:45:12.865523Z","iopub.execute_input":"2024-06-14T03:45:12.866071Z","iopub.status.idle":"2024-06-14T03:45:26.823115Z","shell.execute_reply.started":"2024-06-14T03:45:12.866031Z","shell.execute_reply":"2024-06-14T03:45:26.821881Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"##### Comparing the distribution of the data before and after filling the missing values for categorical columns","metadata":{}},{"cell_type":"code","source":"# Comparison I\nplt.figure(figsize=(5, 3))\n\nsns.histplot(data=df['Street'].value_counts(),log_scale=True,kde=True, label='Before Filling', bins=50)\nsns.histplot(data=new_df['Street'].value_counts(), log_scale=True, kde=True, label='After Filling', alpha=0.3, bins =50)\n\nplt.title('Distribution plot before and after filling missing Values for Street Column')\nplt.xlabel('')\nplt.ylabel('Density')\n\nplt.legend()\nplt.tight_layout()\nplt.show()","metadata":{"execution":{"iopub.status.busy":"2024-06-14T03:45:26.824715Z","iopub.execute_input":"2024-06-14T03:45:26.825258Z","iopub.status.idle":"2024-06-14T03:45:36.946264Z","shell.execute_reply.started":"2024-06-14T03:45:26.825134Z","shell.execute_reply":"2024-06-14T03:45:36.945089Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# Comparison II\nplt.figure(figsize=(5, 3))\n\nsns.histplot(data=df['City'].value_counts(),log_scale=True,kde=True, label='Before Filling')\nsns.histplot(data=new_df['City'].value_counts(), log_scale=True, kde=True, label='After Filling', alpha=0.3)\n\nplt.title('Distribution plot before and after filling missing Values for City Column')\nplt.xlabel('')\nplt.ylabel('Density')\n\nplt.legend()\nplt.tight_layout()\nplt.show()","metadata":{"execution":{"iopub.status.busy":"2024-06-14T03:45:36.9476Z","iopub.execute_input":"2024-06-14T03:45:36.947963Z","iopub.status.idle":"2024-06-14T03:45:41.734052Z","shell.execute_reply.started":"2024-06-14T03:45:36.947925Z","shell.execute_reply":"2024-06-14T03:45:41.732372Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# Comparison III\nplt.figure(figsize=(5, 3))\n\nsns.histplot(data=df['Weather_Condition'].value_counts(),log_scale=True,kde=True, label='Before Filling')\nsns.histplot(data=new_df['Weather_Condition'].value_counts(), log_scale=True, kde=True, label='After Filling', alpha=0.3)\n\nplt.title('Distribution plot before and after filling missing Values for Weather_Condition Column')\nplt.xlabel('')\nplt.ylabel('Density')\n\nplt.legend()\nplt.tight_layout()\nplt.show()","metadata":{"execution":{"iopub.status.busy":"2024-06-14T03:45:41.735622Z","iopub.execute_input":"2024-06-14T03:45:41.736009Z","iopub.status.idle":"2024-06-14T03:45:45.733721Z","shell.execute_reply.started":"2024-06-14T03:45:41.735976Z","shell.execute_reply":"2024-06-14T03:45:45.73221Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# Comparison IV\nplt.figure(figsize=(5, 3))\n\nsns.histplot(data=df['Temperature(F)'].value_counts(),log_scale=True,kde=True, label='Before Filling')\nsns.histplot(data=new_df['Temperature(F)'].value_counts(), log_scale=True, kde=True, label='After Filling', alpha=0.3)\n\nplt.title('Distribution plot before and after filling missing Values for Temperature Column')\nplt.xlabel('')\nplt.ylabel('Density')\n\nplt.legend()\nplt.tight_layout()\nplt.show()","metadata":{"execution":{"iopub.status.busy":"2024-06-14T03:45:45.735256Z","iopub.execute_input":"2024-06-14T03:45:45.735609Z","iopub.status.idle":"2024-06-14T03:45:47.122721Z","shell.execute_reply.started":"2024-06-14T03:45:45.73558Z","shell.execute_reply":"2024-06-14T03:45:47.12134Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"#  We are replacing the missing values in each numerical column with the mean of all the entries within that column\nnumeric_feat = ['Temperature(F)', 'Humidity(%)', 'Visibility(mi)']\nnumeric_imputer = SimpleImputer(strategy='mean')\nnew_df[numeric_feat] = numeric_imputer.fit_transform(new_df[numeric_feat])","metadata":{"execution":{"iopub.status.busy":"2024-06-14T03:45:47.124389Z","iopub.execute_input":"2024-06-14T03:45:47.124791Z","iopub.status.idle":"2024-06-14T03:45:47.757684Z","shell.execute_reply.started":"2024-06-14T03:45:47.124742Z","shell.execute_reply":"2024-06-14T03:45:47.756357Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"##### Comparing the distribution of the data before and after filling the missing values for numerical columns","metadata":{}},{"cell_type":"code","source":"for column in ['Temperature(F)', 'Humidity(%)', 'Visibility(mi)']:\n    plt.figure(figsize=(10, 6))\n    sns.histplot(df[column], kde=True, color='blue', alpha=0.5, label='Before Imputation')\n    sns.histplot(new_df[column], kde=True, color='orange', alpha=0.5, label='After Imputation')\n    plt.title(f'{column} Distribution Before and After Imputation')\n    plt.xlabel(column)\n    plt.ylabel('Density')\n    plt.legend()\n    plt.show()","metadata":{"execution":{"iopub.status.busy":"2024-06-14T03:45:47.759261Z","iopub.execute_input":"2024-06-14T03:45:47.759626Z","iopub.status.idle":"2024-06-14T03:49:45.252744Z","shell.execute_reply.started":"2024-06-14T03:45:47.759597Z","shell.execute_reply":"2024-06-14T03:49:45.251421Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"##### We have compared all the modified columns using distribution plots. We can now conduct insightful analysis, as there are no missing values in any column after the data cleaning process.","metadata":{}},{"cell_type":"code","source":"# Altering our Dataframe\ndf= new_df","metadata":{"execution":{"iopub.status.busy":"2024-06-14T04:11:48.581461Z","iopub.execute_input":"2024-06-14T04:11:48.58216Z","iopub.status.idle":"2024-06-14T04:11:48.942554Z","shell.execute_reply.started":"2024-06-14T04:11:48.582115Z","shell.execute_reply":"2024-06-14T04:11:48.94069Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# No Missing values\ndf.isnull().mean()","metadata":{"execution":{"iopub.status.busy":"2024-06-14T03:49:45.261945Z","iopub.execute_input":"2024-06-14T03:49:45.262318Z","iopub.status.idle":"2024-06-14T03:49:51.104998Z","shell.execute_reply.started":"2024-06-14T03:49:45.26228Z","shell.execute_reply":"2024-06-14T03:49:51.103635Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"## Exploratory Analysis and Visualization\n\n#### Attribute-wise Analysis\n\n*City : gives the name of the city* \n\n*State : gives the name of the state*\n\n*Start_Time  : shows start time of the accident* \n\n*Start_Lat & Start_Lng : shows latitude and longitude in GPS coordinate*\n\n*Weather_Condition : tells about the weather condition*\n\n*Temperature(F) : gives the temperature (in Fahrenheit)*\n\n*Severity : shows the severity of the accident, a number between 1 and 4, where 1 indicates the least impact on traffic (i.e., short delay as a result of the accident) and 4 indicates a significant impact on traffic (i.e., long delay)*\n\n*Visibility(mi) : shows visibility (in miles)*\n","metadata":{}},{"cell_type":"markdown","source":"#### City","metadata":{}},{"cell_type":"code","source":"df['City']","metadata":{"execution":{"iopub.status.busy":"2024-06-14T03:49:51.106598Z","iopub.execute_input":"2024-06-14T03:49:51.106987Z","iopub.status.idle":"2024-06-14T03:49:51.117451Z","shell.execute_reply.started":"2024-06-14T03:49:51.106955Z","shell.execute_reply":"2024-06-14T03:49:51.116117Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# No. of unique cities\nlen(df['City'].unique())","metadata":{"execution":{"iopub.status.busy":"2024-06-14T03:49:51.119404Z","iopub.execute_input":"2024-06-14T03:49:51.119953Z","iopub.status.idle":"2024-06-14T03:49:52.008422Z","shell.execute_reply.started":"2024-06-14T03:49:51.119878Z","shell.execute_reply":"2024-06-14T03:49:52.007094Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# No. of Accidents city-wise\ncity_by_accidents = df['City'].value_counts()\ncity_by_accidents","metadata":{"execution":{"iopub.status.busy":"2024-06-14T03:49:52.010221Z","iopub.execute_input":"2024-06-14T03:49:52.01062Z","iopub.status.idle":"2024-06-14T03:49:53.689815Z","shell.execute_reply.started":"2024-06-14T03:49:52.010588Z","shell.execute_reply":"2024-06-14T03:49:53.68858Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# Top 20 cities having most number of accidents\ntop_twenty = city_by_accidents[:20]","metadata":{"execution":{"iopub.status.busy":"2024-06-14T03:49:53.691341Z","iopub.execute_input":"2024-06-14T03:49:53.69171Z","iopub.status.idle":"2024-06-14T03:49:53.697355Z","shell.execute_reply.started":"2024-06-14T03:49:53.69168Z","shell.execute_reply":"2024-06-14T03:49:53.695846Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# Plot\ncity_by_accidents[:20].plot(kind=\"barh\",title='Top 20 cities having most number of accidents',xlabel='Number of Accidents',ylabel='Cities')","metadata":{"execution":{"iopub.status.busy":"2024-06-14T03:49:53.706449Z","iopub.execute_input":"2024-06-14T03:49:53.707107Z","iopub.status.idle":"2024-06-14T03:49:54.251884Z","shell.execute_reply.started":"2024-06-14T03:49:53.707068Z","shell.execute_reply":"2024-06-14T03:49:54.250618Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# Number of Accidents reported in New York\n(df[df['City']== 'New York'].shape[0])","metadata":{"execution":{"iopub.status.busy":"2024-06-14T03:49:54.253523Z","iopub.execute_input":"2024-06-14T03:49:54.253929Z","iopub.status.idle":"2024-06-14T03:49:55.675431Z","shell.execute_reply.started":"2024-06-14T03:49:54.253896Z","shell.execute_reply":"2024-06-14T03:49:55.674358Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# Number of cities having accidents greater than or equal to 1000\nhigh_accident_city = city_by_accidents[city_by_accidents >= 1000]\nlen(high_accident_city)","metadata":{"execution":{"iopub.status.busy":"2024-06-14T03:49:55.676764Z","iopub.execute_input":"2024-06-14T03:49:55.677146Z","iopub.status.idle":"2024-06-14T03:49:55.685525Z","shell.execute_reply.started":"2024-06-14T03:49:55.677115Z","shell.execute_reply":"2024-06-14T03:49:55.684255Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# Number of cities having accidents less than 1000\nlow_accident_city = city_by_accidents[city_by_accidents < 1000]\nlen(low_accident_city)","metadata":{"execution":{"iopub.status.busy":"2024-06-14T03:49:55.687433Z","iopub.execute_input":"2024-06-14T03:49:55.688103Z","iopub.status.idle":"2024-06-14T03:49:55.700724Z","shell.execute_reply.started":"2024-06-14T03:49:55.688067Z","shell.execute_reply":"2024-06-14T03:49:55.699309Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# Percentage of cities having accidents greater than or equal to 1000\nlen(high_accident_city)/len(city_by_accidents)","metadata":{"execution":{"iopub.status.busy":"2024-06-14T03:49:55.702395Z","iopub.execute_input":"2024-06-14T03:49:55.702758Z","iopub.status.idle":"2024-06-14T03:49:55.717954Z","shell.execute_reply.started":"2024-06-14T03:49:55.702729Z","shell.execute_reply":"2024-06-14T03:49:55.716447Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# Distribution I(Accidents-City Analysis)\nsns.set_style('darkgrid')\nsns.histplot(city_by_accidents,bins=100,log_scale=True,kde=True,).set(xlabel='Number of Accidents', ylabel='Number of Cities')","metadata":{"execution":{"iopub.status.busy":"2024-06-14T03:49:55.719748Z","iopub.execute_input":"2024-06-14T03:49:55.720712Z","iopub.status.idle":"2024-06-14T03:49:57.32498Z","shell.execute_reply.started":"2024-06-14T03:49:55.720675Z","shell.execute_reply":"2024-06-14T03:49:57.323676Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# Distribution II(Accidents are high)\nsns.histplot(high_accident_city,bins=100,log_scale=True,kde=True,).set(xlabel='Number of Accidents', ylabel='Number of Cities')","metadata":{"execution":{"iopub.status.busy":"2024-06-14T03:49:57.326707Z","iopub.execute_input":"2024-06-14T03:49:57.327203Z","iopub.status.idle":"2024-06-14T03:49:58.487278Z","shell.execute_reply.started":"2024-06-14T03:49:57.327158Z","shell.execute_reply":"2024-06-14T03:49:58.486046Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# Distribution III(Accidents are low)\nsns.histplot(low_accident_city,bins=100,log_scale=True,kde=True,).set(xlabel='Number of Accidents', ylabel='Number of Cities')","metadata":{"execution":{"iopub.status.busy":"2024-06-14T03:49:58.489013Z","iopub.execute_input":"2024-06-14T03:49:58.48939Z","iopub.status.idle":"2024-06-14T03:49:59.853487Z","shell.execute_reply.started":"2024-06-14T03:49:58.489358Z","shell.execute_reply":"2024-06-14T03:49:59.852032Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# Cities which have reported only one accident\nlen(city_by_accidents[city_by_accidents==1])","metadata":{"execution":{"iopub.status.busy":"2024-06-14T03:49:59.855217Z","iopub.execute_input":"2024-06-14T03:49:59.855668Z","iopub.status.idle":"2024-06-14T03:49:59.864675Z","shell.execute_reply.started":"2024-06-14T03:49:59.855632Z","shell.execute_reply":"2024-06-14T03:49:59.863064Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"#### State ","metadata":{}},{"cell_type":"code","source":"state = df['State']","metadata":{"execution":{"iopub.status.busy":"2024-06-14T03:49:59.866512Z","iopub.execute_input":"2024-06-14T03:49:59.867533Z","iopub.status.idle":"2024-06-14T03:49:59.87457Z","shell.execute_reply.started":"2024-06-14T03:49:59.867496Z","shell.execute_reply":"2024-06-14T03:49:59.873261Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# Number of unique states \nlen(df['State'].unique())","metadata":{"execution":{"iopub.status.busy":"2024-06-14T03:49:59.876265Z","iopub.execute_input":"2024-06-14T03:49:59.876711Z","iopub.status.idle":"2024-06-14T03:50:00.564916Z","shell.execute_reply.started":"2024-06-14T03:49:59.87667Z","shell.execute_reply":"2024-06-14T03:50:00.563512Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# The top 5 states with the highest number of accidents\ntop_state = state.value_counts().head(5).reset_index()","metadata":{"execution":{"iopub.status.busy":"2024-06-14T03:50:00.566939Z","iopub.execute_input":"2024-06-14T03:50:00.567305Z","iopub.status.idle":"2024-06-14T03:50:01.993158Z","shell.execute_reply.started":"2024-06-14T03:50:00.567275Z","shell.execute_reply":"2024-06-14T03:50:01.991314Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# Visualization Plot\nplt.figure(figsize=(8, 6))\nsns.barplot(x='State', y='count', data=top_state, palette=\"magma\")\nplt.title('Top 5 highest Accident States')\nplt.xlabel('State')\nplt.ylabel('Count')\nplt.show()","metadata":{"execution":{"iopub.status.busy":"2024-06-14T03:50:01.995272Z","iopub.execute_input":"2024-06-14T03:50:01.995773Z","iopub.status.idle":"2024-06-14T03:50:02.314488Z","shell.execute_reply.started":"2024-06-14T03:50:01.995728Z","shell.execute_reply":"2024-06-14T03:50:02.313004Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"#### Location","metadata":{}},{"cell_type":"code","source":"# Latitude\nlat = df['Start_Lat']\nlat","metadata":{"execution":{"iopub.status.busy":"2024-06-14T03:50:02.316442Z","iopub.execute_input":"2024-06-14T03:50:02.316947Z","iopub.status.idle":"2024-06-14T03:50:02.327501Z","shell.execute_reply.started":"2024-06-14T03:50:02.316831Z","shell.execute_reply":"2024-06-14T03:50:02.326159Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# Longitude\nlon = df['Start_Lng']\nlon","metadata":{"execution":{"iopub.status.busy":"2024-06-14T03:50:02.329273Z","iopub.execute_input":"2024-06-14T03:50:02.329685Z","iopub.status.idle":"2024-06-14T03:50:02.344382Z","shell.execute_reply.started":"2024-06-14T03:50:02.329652Z","shell.execute_reply":"2024-06-14T03:50:02.343045Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# Approximate Map of US\nsns.scatterplot(x=lon,y=lat)","metadata":{"execution":{"iopub.status.busy":"2024-06-14T03:50:02.346136Z","iopub.execute_input":"2024-06-14T03:50:02.347041Z","iopub.status.idle":"2024-06-14T03:50:33.795043Z","shell.execute_reply.started":"2024-06-14T03:50:02.34699Z","shell.execute_reply":"2024-06-14T03:50:33.793696Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# Using folium to visualize the location of accidents on the map\nimport folium\n\nfrom folium.plugins import HeatMap\nlat_lon_pairs = list(zip(list(lat), list(lon)))\n\nmap = folium.Map()\nHeatMap(lat_lon_pairs).add_to(map)\nmap","metadata":{"execution":{"iopub.status.busy":"2024-06-14T05:33:08.754854Z","iopub.execute_input":"2024-06-14T05:33:08.755284Z","iopub.status.idle":"2024-06-14T05:35:49.404874Z","shell.execute_reply.started":"2024-06-14T05:33:08.755254Z","shell.execute_reply":"2024-06-14T05:35:49.40053Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"#### Time","metadata":{}},{"cell_type":"code","source":"# Datatype Conversion\ntime=df['Start_Time']\ntime = pd.to_datetime(time, errors='coerce')","metadata":{"execution":{"iopub.status.busy":"2024-06-14T03:50:33.796729Z","iopub.execute_input":"2024-06-14T03:50:33.797163Z","iopub.status.idle":"2024-06-14T03:50:40.308018Z","shell.execute_reply.started":"2024-06-14T03:50:33.797132Z","shell.execute_reply":"2024-06-14T03:50:40.306388Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# Number of Accidents with hour of a day\nsns.displot(time.dt.hour, bins=24,stat='percent')\nplt.title('Number of Accidents with hour of a day')\nplt.xlabel('Hour')\nplt.show()","metadata":{"execution":{"iopub.status.busy":"2024-06-14T04:58:53.386021Z","iopub.execute_input":"2024-06-14T04:58:53.386461Z","iopub.status.idle":"2024-06-14T04:59:05.079508Z","shell.execute_reply.started":"2024-06-14T04:58:53.386427Z","shell.execute_reply":"2024-06-14T04:59:05.078058Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# Number of Accidents with day of a week\nsns.displot(time.dt.dayofweek, bins=7,stat='percent')\nplt.title('Number of Accidents with day of a week')\nplt.xlabel('Day')\nplt.show()","metadata":{"execution":{"iopub.status.busy":"2024-06-14T04:59:22.455386Z","iopub.execute_input":"2024-06-14T04:59:22.455855Z","iopub.status.idle":"2024-06-14T04:59:33.90909Z","shell.execute_reply.started":"2024-06-14T04:59:22.455817Z","shell.execute_reply":"2024-06-14T04:59:33.90766Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# Weekends-Accident Analysis\nweekends = time[(time.dt.dayofweek==6) | (time.dt.dayofweek==5)]\nweekends","metadata":{"execution":{"iopub.status.busy":"2024-06-14T03:51:03.149372Z","iopub.execute_input":"2024-06-14T03:51:03.149926Z","iopub.status.idle":"2024-06-14T03:51:03.860467Z","shell.execute_reply.started":"2024-06-14T03:51:03.149882Z","shell.execute_reply":"2024-06-14T03:51:03.859042Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# Number of Accidents with hour of a weekend(Saturday/Sunday)\nsns.displot(weekends.dt.hour, bins=24,stat='percent')\nplt.title('Number of Accidents with hour of a weekend(Saturday/Sunday)')\nplt.xlabel('Hour')\nplt.show()","metadata":{"execution":{"iopub.status.busy":"2024-06-14T05:00:43.355377Z","iopub.execute_input":"2024-06-14T05:00:43.35638Z","iopub.status.idle":"2024-06-14T05:00:45.258333Z","shell.execute_reply.started":"2024-06-14T05:00:43.356338Z","shell.execute_reply":"2024-06-14T05:00:45.256843Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# Months-Accident Analysis\nsns.displot(time.dt.month, bins=12,stat='percent')\nplt.title('Months-Accident Analysis')\nplt.xlabel('Month')\nplt.show()","metadata":{"execution":{"iopub.status.busy":"2024-06-14T05:01:17.457048Z","iopub.execute_input":"2024-06-14T05:01:17.457518Z","iopub.status.idle":"2024-06-14T05:01:28.965662Z","shell.execute_reply.started":"2024-06-14T05:01:17.457482Z","shell.execute_reply":"2024-06-14T05:01:28.964368Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# Years-Accident Analysis\nsns.displot(time.dt.year,stat='percent')\nplt.title('Years-Accident Analysis')\nplt.xlabel('Year')\nplt.show()","metadata":{"execution":{"iopub.status.busy":"2024-06-14T05:02:59.262418Z","iopub.execute_input":"2024-06-14T05:02:59.263566Z","iopub.status.idle":"2024-06-14T05:03:11.144175Z","shell.execute_reply.started":"2024-06-14T05:02:59.263521Z","shell.execute_reply":"2024-06-14T05:03:11.142943Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"##### The number of accidents has been increasing each year, yet 2023 recorded the lowest number of accidents. This is highly unusual. We need to examine the data for 2023.","metadata":{}},{"cell_type":"code","source":"# 2023 Analysis\ntime_2023 = time[time.dt.year==2023]","metadata":{"execution":{"iopub.status.busy":"2024-06-14T05:08:03.847692Z","iopub.execute_input":"2024-06-14T05:08:03.848232Z","iopub.status.idle":"2024-06-14T05:08:04.148155Z","shell.execute_reply.started":"2024-06-14T05:08:03.848193Z","shell.execute_reply":"2024-06-14T05:08:04.146648Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# Visualization Plot\nsns.displot(time_2023.dt.month,stat='percent')\nplt.title('Month-Accident Analysis for 2023')\nplt.xlabel('Month')\nplt.show()","metadata":{"execution":{"iopub.status.busy":"2024-06-14T05:08:57.646655Z","iopub.execute_input":"2024-06-14T05:08:57.647561Z","iopub.status.idle":"2024-06-14T05:08:58.50138Z","shell.execute_reply.started":"2024-06-14T05:08:57.647519Z","shell.execute_reply":"2024-06-14T05:08:58.499995Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"##### The reason for the seemingly lower number of accidents in 2023 is primarily due to data availability.","metadata":{}},{"cell_type":"markdown","source":"#### Weather\n","metadata":{}},{"cell_type":"code","source":"df['Weather_Condition']","metadata":{"execution":{"iopub.status.busy":"2024-06-14T03:51:17.309081Z","iopub.execute_input":"2024-06-14T03:51:17.309517Z","iopub.status.idle":"2024-06-14T03:51:17.320004Z","shell.execute_reply.started":"2024-06-14T03:51:17.309482Z","shell.execute_reply":"2024-06-14T03:51:17.318272Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"weather = df['Weather_Condition'].value_counts().reset_index()","metadata":{"execution":{"iopub.status.busy":"2024-06-14T03:51:17.321928Z","iopub.execute_input":"2024-06-14T03:51:17.322321Z","iopub.status.idle":"2024-06-14T03:51:18.77603Z","shell.execute_reply.started":"2024-06-14T03:51:17.32229Z","shell.execute_reply":"2024-06-14T03:51:18.774457Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# Top 10 Weather Conditions with most number of Accidents\nweather = weather.head(10)\nweather","metadata":{"execution":{"iopub.status.busy":"2024-06-14T03:51:18.777804Z","iopub.execute_input":"2024-06-14T03:51:18.778292Z","iopub.status.idle":"2024-06-14T03:51:18.795465Z","shell.execute_reply.started":"2024-06-14T03:51:18.778252Z","shell.execute_reply":"2024-06-14T03:51:18.794124Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# Visualization Plot\nplt.figure(figsize=(8, 6))\nsns.barplot(x='Weather_Condition', y='count', data=weather, palette=\"magma\")\nplt.title('Top 5 highest Accident Weather Conditions')\nplt.xlabel('State')\nplt.ylabel('Count')\nplt.xticks(rotation=45,ha='right')\nplt.show()","metadata":{"execution":{"iopub.status.busy":"2024-06-14T03:51:18.797536Z","iopub.execute_input":"2024-06-14T03:51:18.797961Z","iopub.status.idle":"2024-06-14T03:51:19.827396Z","shell.execute_reply.started":"2024-06-14T03:51:18.797918Z","shell.execute_reply":"2024-06-14T03:51:19.826075Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"##### Impact of Weather on Accident Severity:","metadata":{}},{"cell_type":"code","source":" df[['Weather_Condition', 'Severity']]","metadata":{"execution":{"iopub.status.busy":"2024-06-14T03:51:19.829204Z","iopub.execute_input":"2024-06-14T03:51:19.829588Z","iopub.status.idle":"2024-06-14T03:51:19.977886Z","shell.execute_reply.started":"2024-06-14T03:51:19.829554Z","shell.execute_reply":"2024-06-14T03:51:19.976662Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# Creating a DataFrame that summarizes the mean severity for each weather condition by grouping.\nseverity_weather = df.groupby('Weather_Condition')['Severity'].mean().reset_index().sort_values(by='Severity', ascending=False)","metadata":{"execution":{"iopub.status.busy":"2024-06-14T03:51:19.979357Z","iopub.execute_input":"2024-06-14T03:51:19.979682Z","iopub.status.idle":"2024-06-14T03:51:20.983052Z","shell.execute_reply.started":"2024-06-14T03:51:19.979654Z","shell.execute_reply":"2024-06-14T03:51:20.981713Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# Visualisation of the Top 10 Weather Conditions that are associated with severe accidents.\nplt.figure(figsize=(8, 6))\nsns.barplot(x='Severity', y='Weather_Condition', data=severity_weather[0:10], palette=\"magma\")\nplt.title('Top 10 Weather Condition associated with severe accidents')\nplt.xlabel('Mean Severity')\nplt.ylabel('Weather Condition')\nplt.show()","metadata":{"execution":{"iopub.status.busy":"2024-06-14T03:51:20.984466Z","iopub.execute_input":"2024-06-14T03:51:20.98485Z","iopub.status.idle":"2024-06-14T03:51:21.480967Z","shell.execute_reply.started":"2024-06-14T03:51:20.984818Z","shell.execute_reply":"2024-06-14T03:51:21.47981Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"##### Impact of Weather on Visibility:","metadata":{}},{"cell_type":"code","source":"df[['Weather_Condition','Visibility(mi)']]","metadata":{"execution":{"iopub.status.busy":"2024-06-14T03:51:21.482566Z","iopub.execute_input":"2024-06-14T03:51:21.483106Z","iopub.status.idle":"2024-06-14T03:51:21.664019Z","shell.execute_reply.started":"2024-06-14T03:51:21.483063Z","shell.execute_reply":"2024-06-14T03:51:21.662457Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# Creating a DataFrame that summarizes the mean visibility for each weather condition by grouping.\nvisibility_weather = df.groupby('Weather_Condition')['Visibility(mi)'].mean().reset_index().sort_values(by='Visibility(mi)', ascending=False)","metadata":{"execution":{"iopub.status.busy":"2024-06-14T03:51:21.665802Z","iopub.execute_input":"2024-06-14T03:51:21.666234Z","iopub.status.idle":"2024-06-14T03:51:22.632497Z","shell.execute_reply.started":"2024-06-14T03:51:21.666201Z","shell.execute_reply":"2024-06-14T03:51:22.631235Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# Visualisation Plot for Weather-Visibility Analysis\nplt.figure(figsize=(25, 25))\nsns.barplot(x='Visibility(mi)', y='Weather_Condition', data=visibility_weather, palette=\"magma\")\nplt.title('Weather-Visibility Analysis')\nplt.xlabel('Mean Visibility')\nplt.ylabel('Weather Conditions')\nplt.show()","metadata":{"execution":{"iopub.status.busy":"2024-06-14T03:51:22.634601Z","iopub.execute_input":"2024-06-14T03:51:22.635025Z","iopub.status.idle":"2024-06-14T03:51:25.018198Z","shell.execute_reply.started":"2024-06-14T03:51:22.63499Z","shell.execute_reply":"2024-06-14T03:51:25.016852Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"#### Temperature","metadata":{}},{"cell_type":"code","source":"df['Temperature(F)'].describe()","metadata":{"execution":{"iopub.status.busy":"2024-06-14T03:51:25.020245Z","iopub.execute_input":"2024-06-14T03:51:25.020641Z","iopub.status.idle":"2024-06-14T03:51:25.37357Z","shell.execute_reply.started":"2024-06-14T03:51:25.020608Z","shell.execute_reply":"2024-06-14T03:51:25.372401Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# Checking the maximum recorded temperature\ndf[df['Temperature(F)']==207]","metadata":{"execution":{"iopub.status.busy":"2024-06-14T04:13:35.210929Z","iopub.execute_input":"2024-06-14T04:13:35.212239Z","iopub.status.idle":"2024-06-14T04:13:35.249004Z","shell.execute_reply.started":"2024-06-14T04:13:35.212194Z","shell.execute_reply":"2024-06-14T04:13:35.247737Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"###### The data shows a temperature of 207°F. This is possible, but very rare, especially for the locations listed (Redlands, CA, San Bernardino County, CA and Crestline, CA),  suggesting the presence of potential outliers that may need to be addressed.\n","metadata":{}},{"cell_type":"code","source":"temperature = df['Temperature(F)'].value_counts().reset_index()","metadata":{"execution":{"iopub.status.busy":"2024-06-14T04:15:04.727624Z","iopub.execute_input":"2024-06-14T04:15:04.728625Z","iopub.status.idle":"2024-06-14T04:15:04.877626Z","shell.execute_reply.started":"2024-06-14T04:15:04.728582Z","shell.execute_reply":"2024-06-14T04:15:04.876283Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"temperature = temperature.round(2)\ntemperature","metadata":{"execution":{"iopub.status.busy":"2024-06-14T04:20:22.474342Z","iopub.execute_input":"2024-06-14T04:20:22.474806Z","iopub.status.idle":"2024-06-14T04:20:22.49437Z","shell.execute_reply.started":"2024-06-14T04:20:22.474759Z","shell.execute_reply":"2024-06-14T04:20:22.492866Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"plt.figure(figsize=(8, 5))\nsns.barplot(x='Temperature(F)', y='count', data=temperature.head(5), palette=\"magma\")\nplt.title('Top 5 highest Accident Temperature')\nplt.xlabel('Temperature(in Fahrenheit(F))')\nplt.ylabel('Count')\nplt.xticks(rotation=45,ha='center')\nplt.show()","metadata":{"execution":{"iopub.status.busy":"2024-06-14T04:21:42.39143Z","iopub.execute_input":"2024-06-14T04:21:42.391963Z","iopub.status.idle":"2024-06-14T04:21:42.77145Z","shell.execute_reply.started":"2024-06-14T04:21:42.391926Z","shell.execute_reply":"2024-06-14T04:21:42.770162Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# Checking for data inconsistencies\ntemperature[temperature['Temperature(F)']> 140].sum()","metadata":{"execution":{"iopub.status.busy":"2024-06-14T04:36:46.621643Z","iopub.execute_input":"2024-06-14T04:36:46.622242Z","iopub.status.idle":"2024-06-14T04:36:46.636688Z","shell.execute_reply.started":"2024-06-14T04:36:46.622195Z","shell.execute_reply":"2024-06-14T04:36:46.635172Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"## Summary & Conclusions\n\n1. Approximately 9% of the cities experience more than 1,000 accidents.\n\n2. About 1,023 cities (7%) have reported only one accident, suggesting the presence of potential outliers that may need to be addressed.\n\n3. Miami leads with the highest number of accidents among the top 20 cities, while Columbia has the fewest accidents in this group.\n\n4. New York accounts for only 21,699 accidents, which is approximately 0.28% of the total number of accidents in the US, despite being the most populated city in the country.\n\n5. California, Florida, Texas, South Carolina, and New York emerge as the top 5 states with the highest number of accidents.\n\n6. A high percentage of accidents occur between between 6 AM to 10 AM.\n\n7. On Weekends, high percentage of accidents occur between 12PM to 4 PM with the peak accidents around 2PM.\n\n8. Weekdays show a higher number of accidents compared to weekends.\n\n9. The majority of accidents tend to occur at the end of the year.\n\n10. The dataset used for analysis only includes information up to March 2023, which means it does not encompass the entire year. Consequently, the observed decrease in accidents for 2023 may not accurately represent the true accident rate for the entire year, as data for the subsequent months is missing. Therefore, any conclusions about accident trends in 2023 should be approached with caution, given the incomplete data for that year.\n\n11. The top 10 most common weather conditions during accidents include: Fair, Mostly Cloudy, Cloudy, Clear, Partly Cloudy, Overcast, Light Rain, Scattered Clouds, Light Snow, and Fog.\n\n12. Light Blowing Snow exhibits the highest average severity at 3.67.\n\n13. Partial Fog with Wind, Heavy Thunderstorms and Snow, Light Thunderstorms and Snow, Heavy Ice Pellets, Heavy Blowing Snow, and Drifting Snow with Wind also demonstrate notable average severity levels.\n\n14. Some weather conditions can significantly reduce visibility and create hazardous driving conditions. Heavy Thunderstorms and Snow are characterized by the lowest visibility among all weather conditions.\n\n15. The initial analysis suggests a potential correlation between temperature and accident frequency within the range of 61.66°F and 77°F.\n\n16. The dataset does contain approximately 22 entries that appear to be outliers based on expected temperature ranges.(The maximum reported temperature of US is around 134°F)\n\n17. There is a seasonal variation in accidents, with fewer incidents during the summer and an increasing trend as winter approaches.\n\n18. Accident rates are higher in coastal/bay areas than in inland regions.\n\n","metadata":{}}]}